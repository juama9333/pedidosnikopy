import React, { useState, useEffect } from 'react';
import axios from 'axios';

const App = () => {
  const [currentUser, setCurrentUser] = useState(null);
  const [loginForm, setLoginForm] = useState({ username: '', password: '' });
  const [products, setProducts] = useState([]);
  const [cart, setCart] = useState([]);

  const login = (e) => {
    e.preventDefault();
    if (loginForm.username === 'juanpypy' && loginForm.password === '756341') {
      setCurrentUser({ username: 'juanpypy', isAdmin: true });
    } else {
      alert('Usuario o contraseña incorrectos');
    }
  };

  const logout = () => setCurrentUser(null);

  const incrementQuantity = (product) => {
    const updatedCart = [...cart];
    const item = updatedCart.find(i => i.product.id === product.id);
    if (item) {
      item.quantity++;
    } else {
      updatedCart.push({ product, quantity: 1 });
    }
    setCart(updatedCart);
  };

  const decrementQuantity = (product) => {
    const updatedCart = [...cart];
    const item = updatedCart.find(i => i.product.id === product.id);
    if (item && item.quantity > 0) {
      item.quantity--;
      if (item.quantity === 0) {
        const index = updatedCart.indexOf(item);
        updatedCart.splice(index, 1);
      }
      setCart(updatedCart);
    }
  };

  const confirmOrder = () => {
    if (cart.length === 0) {
      alert('El carrito está vacío');
    } else {
      alert('Pedido confirmado');
    }
  };

  useEffect(() => {
    setProducts([
      { id: 1, name: 'Coca-Cola 2L', price: 10000 },
      { id: 2, name: 'Sprite 1.5L', price: 8000 },
      { id: 3, name: 'Fanta 1L', price: 6000 }
    ]);
  }, []);

  return (
    <div>
      <header>
        <h1>Niko Bebidas</h1>
        {currentUser && (
          <div>
            <span>Bienvenido, {currentUser.username}</span>
            <button onClick={logout}>Cerrar Sesión</button>
          </div>
        )}
      </header>

      {!currentUser ? (
        <form onSubmit={login}>
          <input
            type="text"
            value={loginForm.username}
            onChange={(e) => setLoginForm({ ...loginForm, username: e.target.value })}
            placeholder="Usuario"
            required
          />
          <input
            type="password"
            value={loginForm.password}
            onChange={(e) => setLoginForm({ ...loginForm, password: e.target.value })}
            placeholder="Contraseña"
            required
          />
          <button type="submit">Ingresar</button>
        </form>
      ) : (
        <div>
          <h2>Catálogo de Productos</h2>
          <ul>
            {products.map(product => (
              <li key={product.id}>
                {product.name} - {product.price} Gs.
                <button onClick={() => incrementQuantity(product)}>+</button>
                <button onClick={() => decrementQuantity(product)}>-</button>
              </li>
            ))}
          </ul>
          <h3>Total: {cart.reduce((total, item) => total + item.product.price * item.quantity, 0)} Gs.</h3>
          <button onClick={confirmOrder}>Confirmar Pedido</button>
        </div>
      )}
    </div>
  );
};

export default App;
